package graphics;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.Timer;
import object.DVDataset;
import singleton.ConfigurationManager;
import singleton.PostgresSQLDBManager;
import utils.GraphicUtils;

/**
 *
 * @author MSHAO1
 */
public class DataVisualizationPanel extends javax.swing.JPanel {
    static int FPS = 30;
    static int OFFSET = 7;

    private class DatasetComboBoxItemChangeListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                Object item = e.getItem();
                ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvStrainTypeId(item.toString());
            }
        }
    }

    private class TableComboBoxItemChangeListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                Object item = e.getItem();
                ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvTableName(item.toString());
                ArrayList<String> tableKeys = PostgresSQLDBManager.getAllKeysOfTable(item.toString());
                ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvTableKeys(tableKeys);
//                GraphicUtils.populateFeatureComboBox(featureComboBox);
            }
        }
    }

    private class FeatureComboBoxItemChangeListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                Object item = e.getItem();
                ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvSelectedColumn(item.toString());
            }
        }
    }

    /**
     * Creates new form DataVisualizationPanel
     */
    public DataVisualizationPanel() {
        initComponents();
        initData();
    }

    private void initData() {
        datasetComboBox.removeAllItems();
        ArrayList<String> resultList = PostgresSQLDBManager.getAllStrainTypeIDs();
        for (String s : resultList) {
            datasetComboBox.addItem(s);
        }
        datasetComboBox.addItemListener(new DatasetComboBoxItemChangeListener());
        datasetComboBox.setSelectedIndex(0);
        ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvStrainTypeId(datasetComboBox.getSelectedItem().toString());

        tableComboBox.removeAllItems();
        resultList = PostgresSQLDBManager.getAllTableNames();
        for (String s : resultList) {
            tableComboBox.addItem(s);
        }
        tableComboBox.addItemListener(new TableComboBoxItemChangeListener());
        tableComboBox.setSelectedIndex(0);
//        System.out.print(ConfigurationManager.getConfigurationManager().getConfiguration().getTableName());
        ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvTableName(tableComboBox.getSelectedItem().toString());
//        GraphicUtils.populateFeatureComboBox(featureComboBox);
        featureComboBox.addItemListener(new FeatureComboBoxItemChangeListener());
        featureComboBox.setSelectedIndex(0);
        ConfigurationManager.getConfigurationManager().getDVConfiguration().setDvSelectedColumn(featureComboBox.getSelectedItem().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        datasetComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        tableComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        featureComboBox = new javax.swing.JComboBox<>();
        timelinePanel = new JPanel();
        playButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataDisplayTextArea = new javax.swing.JTextArea();
        playVideoPanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(820, 540));
        setMinimumSize(new java.awt.Dimension(820, 540));
        setPreferredSize(new java.awt.Dimension(820, 540));

        jLabel1.setText("Select Dataset");

        jLabel2.setText("Select Table");

        jLabel3.setText("Timeline Display");

        jLabel4.setText("Select Feature");

        timelinePanel.setBackground(new java.awt.Color(255, 255, 255));
        timelinePanel.setMaximumSize(new java.awt.Dimension(464, 188));
        timelinePanel.setMinimumSize(new java.awt.Dimension(464, 188));
        timelinePanel.setPreferredSize(new java.awt.Dimension(464, 188));
        timelinePanel.setLayout(new java.awt.BorderLayout());

        playButton.setText("Play");
        playButton.setMaximumSize(new java.awt.Dimension(130, 29));
        playButton.setMinimumSize(new java.awt.Dimension(130, 29));
        playButton.setPreferredSize(new java.awt.Dimension(130, 29));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(390, 300));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(390, 300));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(390, 300));

        dataDisplayTextArea.setColumns(20);
        dataDisplayTextArea.setRows(5);
        jScrollPane2.setViewportView(dataDisplayTextArea);

        playVideoPanel.setMaximumSize(new java.awt.Dimension(400, 300));
        playVideoPanel.setMinimumSize(new java.awt.Dimension(400, 300));
        playVideoPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        playVideoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        playVideoPanel.add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        resetButton.setText("Reset");
        resetButton.setEnabled(false);
        resetButton.setMaximumSize(new java.awt.Dimension(130, 29));
        resetButton.setMinimumSize(new java.awt.Dimension(130, 29));
        resetButton.setPreferredSize(new java.awt.Dimension(130, 29));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        pauseButton.setText("Pause");
        pauseButton.setEnabled(false);
        pauseButton.setMaximumSize(new java.awt.Dimension(130, 29));
        pauseButton.setMinimumSize(new java.awt.Dimension(130, 29));
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playVideoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(featureComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(datasetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(timelinePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playVideoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(datasetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(featureComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(timelinePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:         
        dataset = PostgresSQLDBManager.getDVEntriesFromTable();
        imagePathList = utils.Utils.loadImagePathByStrainTypeId(ConfigurationManager.getConfigurationManager().getDVConfiguration().getDvStrainTypeId(), OFFSET);      
        String fpsStr = PostgresSQLDBManager.getFPSBySTID(ConfigurationManager.getConfigurationManager().getDVConfiguration().getDvStrainTypeId());
        
        try {
            FPS = Integer.parseInt(fpsStr);
        } catch (NumberFormatException nfe) {
            
        }
        
        timer = new Timer(1000 / FPS, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (imagePathList != null && !imagePathList.isEmpty()){
                    BufferedImage img = null;
                    try {
                        System.out.println(imagePathList.peek());
                        img = ImageIO.read(new File(imagePathList.pop()));
                        Image scaledImg = img.getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_FAST);
                        imageLabel.setIcon(new ImageIcon(scaledImg));
                        repaint();
                    } catch (IOException ex) {
                        Logger.getLogger(DataVisualizationPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });

        timelinePlotPanel = new graphics.DynamicLinePlotPanel(timer, dataset, dataDisplayTextArea);
        timelinePlotPanel.setMaximumSize(new java.awt.Dimension(464, 188));
        timelinePlotPanel.setMinimumSize(new java.awt.Dimension(464, 188));
        timelinePlotPanel.setPreferredSize(new java.awt.Dimension(464, 188));
        timelinePanel.add(timelinePlotPanel, java.awt.BorderLayout.CENTER);
        super.revalidate();

        timer.start();
        pauseButton.setEnabled(true);
        resetButton.setEnabled(true);
        playButton.setEnabled(false);
        datasetComboBox.setEnabled(false);
        featureComboBox.setEnabled(false);
        tableComboBox.setEnabled(false);
    }//GEN-LAST:event_playButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        // TODO add your handling code here:
        if (timer.isRunning()) {
            timer.stop();
            pauseButton.setText("Continue");
        } else {
            timer.start();
            pauseButton.setText("Pause");
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        resetControls();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void resetControls() {
        timer.stop();
        timer = null;
        timelinePanel.remove(timelinePlotPanel);
        timelinePlotPanel = null;
        dataset = null;
        imageLabel.setIcon(null);
        super.revalidate();

        pauseButton.setText("Pause");
        pauseButton.setEnabled(false);
        resetButton.setEnabled(false);
        playButton.setEnabled(true);
        datasetComboBox.setEnabled(true);
        featureComboBox.setEnabled(true);
        tableComboBox.setEnabled(true);
        dataDisplayTextArea.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea dataDisplayTextArea;
    private javax.swing.JComboBox<String> datasetComboBox;
    private javax.swing.JComboBox<String> featureComboBox;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JPanel playVideoPanel;
    private javax.swing.JButton resetButton;
    private javax.swing.JComboBox<String> tableComboBox;
    private javax.swing.JPanel timelinePanel;
    // End of variables declaration//GEN-END:variables
private DynamicLinePlotPanel timelinePlotPanel;
    private Timer timer;
    private DVDataset dataset;
    private LinkedList<String> imagePathList;
}
